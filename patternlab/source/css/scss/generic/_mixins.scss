/*------------------------------------*\
    $MIXINS
\*------------------------------------*/

// Maintain ratio mixin. Great for responsive grids, or videos.
// https://gist.github.com/brianmcallister/2932463
// 
// $ratio - Ratio the element needs to maintain.
// 
// Examples
// 
//   A 16:9 ratio would look like this:
//   .element {
//     @include maintain-ratio(16 9);
//   }

@mixin maintain-ratio($ratio: 1 1) {
  @if length($ratio) < 2 or length($ratio) > 2 {
    @warn "$ratio must be a list with two values.";
  }
 
  $width: 100%;
  $height: percentage(nth($ratio, 2) / nth($ratio, 1));
  
  width: $width;
  height: 0;
  padding-bottom: $height;
}


/* CSS Transition
	Usage: @include transition(width,0.3s,ease-out);
 */
@mixin transition($transition-property, $transition-time, $method) {
	-webkit-transition: $transition-property $transition-time $method;
	-moz-transition: $transition-property $transition-time $method;
	-ms-transition: $transition-property $transition-time $method;
	-o-transition: $transition-property $transition-time $method;
	transition: $transition-property $transition-time $method;
}

/**
* Vertical align anything with just 3 lines of CSS
* http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/
**/

@mixin vertical-align {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

/**
USAGE:
   .element p {
        @include vertical-align;
    }
**/

%vertical-align {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

/*  ------------------------
    USAGE:
    .element p {
        @extend %vertical-align;
    }
    -------------------------- */